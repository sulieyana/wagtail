"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)



FORCE_SCRIPT_NAME = ''

STATIC_URL = "/wagtail/static/"
# STATIC_ROOT = BASE_DIR / "static_root"
STATIC_ROOT = os.path.join(BASE_DIR, "static_root")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/


AUTHENTICATION_BACKENDS = [
    'home.auth.KeycloakOIDCBackend',  # Your custom backend
    # 'mozilla_django_oidc.auth.OIDCAuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
]



# Application definition

INSTALLED_APPS = [
   
    "search",
    "wagtail.contrib.forms",
    "wagtail.contrib.redirects",
    "wagtail.embeds",
    "wagtail.sites",
    "wagtail.users",
    "wagtail.snippets",
    "wagtail.documents",
    "wagtail.images",
    "wagtail.search",
    "wagtail.admin",
    "wagtail",
    "modelcluster",
    "taggit",
    "django_filters",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "home",
    'drf_yasg',
    'corsheaders',
]

INSTALLED_APPS += ['wagtail.api.v2']
INSTALLED_APPS += ['mozilla_django_oidc']


CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # frontend dev URL
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

CORS_ALLOW_CREDENTIALS = True


LOGIN_URL = '/oidc/authenticate/'
LOGIN_REDIRECT_URL = '/admin/'

OIDC_RP_CLIENT_ID = 'cms-wagtail'
OIDC_RP_CLIENT_SECRET = 'N9SCHXszr1DqMrT0uyhTLEBTgr1gLoUt'

OIDC_RP_SIGN_ALGO = 'RS256'

# OIDC_OP_BASE_URL = 'http://10.1.64.192:32730/realms/mtssb'
# OIDC_OP_BASE_URL = "http://10.1.64.192:32080/auth/realms/mtssb" # Your Keycloak Realm URL
OIDC_OP_BASE_URL = "http://10.1.75.92/auth/realms/mtssb" # Your Keycloak Realm URL
OIDC_OP_AUTHORIZATION_ENDPOINT = OIDC_OP_BASE_URL + '/protocol/openid-connect/auth'
OIDC_OP_TOKEN_ENDPOINT = OIDC_OP_BASE_URL + '/protocol/openid-connect/token'
OIDC_OP_USER_ENDPOINT = OIDC_OP_BASE_URL + '/protocol/openid-connect/userinfo'
OIDC_OP_JWKS_ENDPOINT = OIDC_OP_BASE_URL + '/protocol/openid-connect/certs'

OIDC_OP_LOGOUT_ENDPOINT = OIDC_OP_BASE_URL + '/protocol/openid-connect/logout'

# http://127.0.0.1:8000/oidc/callback/


OIDC_LOGOUT_REDIRECT_URL = "http://127.0.0.1:8000/admin/"  # Or wherever you want after logout
LOGOUT_REDIRECT_URL = "/oidc/logout/"  # Calls the OIDC logout view



# Optional if CSRF issues happen
OIDC_STORE_ACCESS_TOKEN = True
OIDC_STORE_ID_TOKEN = True

WAGTAIL_FRONTEND_LOGIN_URL = LOGIN_URL
OIDC_AUTHENTICATION_CALLBACK_VIEW_NAME = "oidc_callback"

MIDDLEWARE = [
    # Safe to keep these first
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',

    # Important! This must come before your custom middleware
   
    'django.contrib.auth.middleware.AuthenticationMiddleware',
     "middleware.token_expiry.TokenExpiryMiddleware",  # Add this line
    # ✅ Place your Keycloak redirect middleware *after* AuthenticationMiddleware
    'middleware.keycloak_redirect.KeycloakAdminRedirectMiddleware',

    # The rest...
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



# MIDDLEWARE = [
#     'middleware.keycloak_redirect.KeycloakAdminRedirectMiddleware',   # ✅ Add here
#     "django.contrib.sessions.middleware.SessionMiddleware",
#     "django.middleware.common.CommonMiddleware",
#     "django.middleware.csrf.CsrfViewMiddleware",
#     "django.contrib.auth.middleware.AuthenticationMiddleware",
#     "django.contrib.messages.middleware.MessageMiddleware",
#     "django.middleware.clickjacking.XFrameOptionsMiddleware",
#     "django.middleware.security.SecurityMiddleware",
#     "wagtail.contrib.redirects.middleware.RedirectMiddleware",
# ]


ROOT_URLCONF = "mysite.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(PROJECT_DIR, "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


WSGI_APPLICATION = "mysite.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'wagtaildb2107',
        'USER': 'postgres',
        'PASSWORD': 'suliana.samoori',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, "static"),
]

# STATIC_ROOT = os.path.join(BASE_DIR, "static")
# STATIC_URL = "static/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "media/"

# Default storage settings, with the staticfiles storage updated.
# See https://docs.djangoproject.com/en/5.2/ref/settings/#std-setting-STORAGES
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    # ManifestStaticFilesStorage is recommended in production, to prevent
    # outdated JavaScript / CSS assets being served from cache
    # (e.g. after a Wagtail upgrade).
    # See https://docs.djangoproject.com/en/5.2/ref/contrib/staticfiles/#manifeststaticfilesstorage
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.ManifestStaticFilesStorage",
    },
}

# Django sets a maximum of 1000 fields per form by default, but particularly complex page models
# can exceed this limit within Wagtail's page editor.
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10_000


# Wagtail settings

WAGTAIL_SITE_NAME = "mysite"

# Search
# https://docs.wagtail.org/en/stable/topics/search/backends.html
WAGTAILSEARCH_BACKENDS = {
    "default": {
        "BACKEND": "wagtail.search.backends.database",
    }
}

# Base URL to use when referring to full URLs within the Wagtail admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash
WAGTAILADMIN_BASE_URL = "http://example.com"

# Allowed file extensions for documents in the document library.
# This can be omitted to allow all files, but note that this may present a security risk
# if untrusted users are allowed to upload files -
# see https://docs.wagtail.org/en/stable/advanced_topics/deploying.html#user-uploaded-files
WAGTAILDOCS_EXTENSIONS = ['csv', 'docx', 'key', 'odt', 'pdf', 'pptx', 'rtf', 'txt', 'xlsx', 'zip']


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {'console': {'class': 'logging.StreamHandler'}},
    'loggers': {
        'mozilla_django_oidc': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}
